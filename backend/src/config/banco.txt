-- Criar o banco de dados
CREATE DATABASE IF NOT EXISTS event_manager;
USE event_manager;

-- Criar a tabela de usuários
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL,
    telefone VARCHAR(15),
    tipo ENUM('admin', 'participante') DEFAULT 'participante',
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Criar a tabela de categorias de eventos
CREATE TABLE categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    descricao TEXT
);

-- Criar a tabela de eventos
CREATE TABLE events (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(255) NOT NULL,
    descricao TEXT,
    data DATE NOT NULL,
    horario TIME NOT NULL,
    local VARCHAR(255) NOT NULL,
    organizador_id INT NOT NULL,
    capacidade_maxima INT DEFAULT 100,
    categoria_id INT,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (organizador_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (categoria_id) REFERENCES categories(id) ON DELETE SET NULL
);

-- Criar a tabela de inscrições
CREATE TABLE registrations (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    evento_id INT NOT NULL,
    data_inscricao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status ENUM('pendente', 'aprovado', 'cancelado') DEFAULT 'pendente',
    FOREIGN KEY (usuario_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (evento_id) REFERENCES events(id) ON DELETE CASCADE
);

-- Inserir usuários (admin e participantes)
INSERT INTO users (nome, email, senha, telefone, tipo) VALUES
('Admin User', 'admin@email.com', '123456', '999999999', 'admin'),
('Carlos Silva', 'carlos@email.com', '123456', '988888888', 'participante'),
('Maria Souza', 'maria@email.com', '123456', '977777777', 'participante');

-- Inserir categorias de eventos
INSERT INTO categories (nome, descricao) VALUES
('Tecnologia', 'Eventos sobre tecnologia e inovação'),
('Negócios', 'Eventos corporativos e empresariais'),
('Entretenimento', 'Shows, peças de teatro e eventos culturais');

-- Inserir eventos
INSERT INTO events (titulo, descricao, data, horario, local, organizador_id, capacidade_maxima, categoria_id) VALUES
('Workshop de JavaScript', 'Aprenda JavaScript do zero!', '2025-05-10', '14:00', 'Auditório Central', 1, 50, 1),
('Conferência de Negócios', 'Grandes empresários falando sobre mercado!', '2025-06-15', '09:00', 'Centro de Convenções', 1, 200, 2),
('Show de Rock', 'Banda XYZ ao vivo!', '2025-07-20', '20:00', 'Arena Principal', 1, 500, 3);

-- Inserir inscrições
INSERT INTO registrations (usuario_id, evento_id, status) VALUES
(2, 1, 'aprovado'),
(3, 2, 'pendente');

-- Consultas úteis
-- Listar todos os usuários
SELECT * FROM users;

-- Listar todos os eventos com seus organizadores
SELECT e.id, e.titulo, e.data, e.horario, u.nome AS organizador
FROM events e
JOIN users u ON e.organizador_id = u.id;

-- Ver inscrições de um evento específico
SELECT r.id, u.nome AS participante, e.titulo AS evento, r.status
FROM registrations r
JOIN users u ON r.usuario_id = u.id
JOIN events e ON r.evento_id = e.id
WHERE e.id = 1;

